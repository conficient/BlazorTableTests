@page "/fetchdata"
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
<Table TableItem="WeatherForecast" Items="forecasts" PageSize="15">
    <Column TableItem="WeatherForecast" Title="Date" Field="@(x => x.Date)" Format="d-MMM-yy" Sortable="true" Filterable="true" />
    <Column TableItem="WeatherForecast" Title="Temp. (C)" Field="@(x => x.TemperatureC)" Sortable="true" Filterable="true" />
    <Column TableItem="WeatherForecast" Title="Temp. (F)" Field="@(x => x.TemperatureF)" Sortable="true" Filterable="true" />
    <Column TableItem="WeatherForecast" Title="Summary" Field="@(x => x.Summary)" Sortable="true" Filterable="true" />
    <Column TableItem="WeatherForecast" Title="Delete" Field="@(x => x.Date)" Sortable="true" >
        <Template>
            <BlazorDialog id=@context.Date.ToString() OnClick=HandleDelete></BlazorDialog>
        </Template>
    </Column>
    <Pager ShowPageNumber="true" ShowTotalCount="true" />
</Table>
}

@code {

    private Task HandleDelete(string id)
    {
        Console.WriteLine("Delete not handled for " + id);
        return Task.FromResult(0);
    }

    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
